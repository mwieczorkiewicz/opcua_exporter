name: Push Actions
on: [push, pull_request]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test-and-build:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        go:
          - '1.23'
          - '1.24'
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go }}
      - name: unit-test
        run: go test -short ./...
        
      # Not sure if we stand to learn much by running build after test here, but it shouldn't cost much either.
      - name: build 
        run: go build ./cmd/opcua_exporter

  build-docker:
    runs-on: ubuntu-24.04
    needs: test-and-build
    outputs:
      image-tag: ${{ steps.meta.outputs.tags }}
      image-digest: ${{ steps.build.outputs.digest }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  e2e-test:
    runs-on: ubuntu-24.04
    needs: build-docker
    if: always() && (needs.build-docker.result == 'success' || needs.build-docker.result == 'skipped')
    strategy:
      matrix:
        go:
          - '1.23'
    env:
      # Allow override of Docker image for e2e tests
      # Format: registry/repo:branch-commit_sha (e.g., ghcr.io/user/opcua_exporter:main-abc123)
      OPCUA_EXPORTER_E2E_IMAGE: ${{ vars.OPCUA_EXPORTER_E2E_IMAGE || format('ghcr.io/{0}:{1}-{2}', github.repository, github.ref_name, github.sha) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go }}
          
      - name: Run e2e tests
        run: go test -v -timeout 10m ./e2e/...
